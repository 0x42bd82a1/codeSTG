这是一个FZU的SE作业
而且只有一个master分支

##使用方法：
1.运行server/serverMain.py；
2.选择喜欢的规则来启动游戏；
3.运行client/clientMain.py；
4.选择端口来观察或手工操作，记得要读操作说明。

####不会安装python第三方库的、以及安装出错的，这里不背锅。

##使用方法：
agent目录里有一个很随性的样例
名为MyAgent.py，可以参考
没有API，数据格式很简单所以丢给用户自己写。

##贡献者：
策划一个人，放飞自我乱写了一星期，应该可以运行。
注释很少，还几乎没有中文，将就读吧（虽然不觉得会有同学这么有耐心读这玩意）

##评价：

####效率：
呵呵

####可靠：
会被网络阻塞简单地炸掉

####易用：
想着双击运行然后开始游戏的小学生请绕道谢谢

####可维护：
谜之耦合一堆，魔数2处
可测试，可修改，不保证可理解
添加模块还算方便

####可移植：
b2d遍地开花，各种语言的实现


##其它
策划 是 个 智 障。
不用Unity+cs，不套模板贴图+设计关卡，真就当成工程来选题，让组员直接对着一个物理引擎+一个随便什么能绘图的引擎编写。
听组员说会点python就把Java扔了重写，最后还是什么都交不了。
全员鶸。
要求提交一个GUI模块，结果只能拿出不知道哪里抄来的Helloworld，提交前几天才开始慌张觉得好难不会写。
要求提交一个socket模块，结果提交了两个main.py两个base.py叫全员对着它加内容（反客为主），而且需要的部分还不完整。
全部从头写，连贴图都是策划（随手）画的。
全员一起写文档，然而全体不了解项目，写了一堆套话，还有不少写错的地方。
以及拉了两宿舍鶸组队的组长对项目日常不闻不问，除非要交文档。
最终答辩为防止策划情绪失控而没有让策划上，上了一个对项目不了解，读稿件都懒的。
总之项目大失败，全线崩溃，再见。

##Friendship Usually Can Keep.
